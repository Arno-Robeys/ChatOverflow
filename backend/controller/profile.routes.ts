/**
 * @swagger
 * components:
 *   schemas:
 *     Profile:
 *       type: object
 *       required:
 *         - userid
 *
 *       properties:
 *         userid:
 *           type: integer
 *           description: The autogenerated ID of the user.
 *         description:
 *           type: string
 *           description: The description of the user.
 *         avatar:
 *           type: string
 *           description: The avatar of the user.
 *         work:
 *           type: string
 *           description: The work of the user.
 *         hobby:
 *           type: string
 *           description: The hobby of the user.
 *         rating:
 *           type: string
 *           description: The rating of the user.
 *         education:
 *           type: string
 *           description: The education of the user.
 *         tags:
 *           type: string
 *           description: The tags of the user.
 *
 */
import express from "express";
import { Profile } from "../domain/model/profile";
import profileService from "../service/profile.service";
const router = express.Router();


/**
 * @swagger
 * tags:
 *  name: Profiles
 *  description: The profile managing API
 */

/**
 * @swagger
 * /profile:
 *   get:
 *     summary: Returns all profiles
 *     tags: [Profiles]
 *     responses:
 *       200:
 *         description: A list of profiles
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 $ref: '#/components/schemas/Profile'
 *       500:
 *         description: Internal server error
 */

router.get("/", async (req, res) => {
    try {
        const profiles = await profileService.getAllProfiles();
        res.status(200).json(profiles)
    } catch(error) {
        res.status(500).json({status: 'error', errorMessage: error.message})
    }
})



export default router